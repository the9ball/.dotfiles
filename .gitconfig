[http]
    sslVerify = false
[user]
	name = Shaula
	email = the9ball@gmail.com
[core]
	editor = vim
	autocrlf = false
	eol = lf
	filemode = false
[merge]
	tool = vimdiff
[alias]
	# Gerrit関連のalias定義
	current-branch = "!sh -c \"git branch | grep '*' | awk '{ print \\$2 }' \"" 
	push-for-review = "!sh -c 'git push origin HEAD:refs/for/master/`git current-branch`'" 
	#pfr = "!sh -c 'git push-for-review'" 
	pfr = push origin HEAD:refs/for/master

	# 自分の
	co = checkout
	cor = "!sh -c 'git co $1 && git rebase $0' `git current-branch`"
	ci = commit
	up = svn rebase
	st = status -sb
	mg = merge --no-ff
	lg = log --oneline --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lgs = log --stat --summary --decorate
	mt = mergetool
	df = diff --ignore-space-at-eol --ignore-space-change --word-diff
	dfl = diff --ignore-space-at-eol --ignore-space-change
	rb = rebase --ignore-whitespace --autosquash
	mt = mergetool
	pr = pull --rebase
	svncheck = svn dcommit --dry-run
	cp = cherry-pick
	hist = log --oneline --graph --date=short --decorate
#	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short --decorate
	last = log --stat --summary --decorate -n1
	hlast = log --pretty=format:'%H' -n1
	topic = "!sh -c 'git co -b $1 master' dummy"
	tree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	tr = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	t = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative -n10
	ontomaster = rebase --onto master local
[color]
	ui = auto
[push]
	default = upstream

# もしものためのコマンド
# git filter-branch --commit-filter '
# GIT_AUTHOR_NAME="Shaula"
# GIT_AUTHOR_EMAIL="the9ball@gmail.com"
# GIT_COMMITTER_NAME="Shaula"
# GIT_COMMITTER_EMAIL="the9ball@gmail.com"
# git commit-tree "$@"
# ' HEAD

# git ls-tree origin/intern2 -r | sed "s/\t/ /" | \grep " \.gitignore" | cut -d' ' -f 3 | xargs git unpack-file | xargs cat

